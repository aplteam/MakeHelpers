 R←Test_API_022(stopFlag batchFlag);⎕TRAP;noOf;folder1;folder2;list;parms;res;noOfFiles;public
⍝ Exercise CreateAPI on all types of objects with a namespace that is linked
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 #.⎕SHADOW'TEMP'
 'TEMP'#.⎕NS''
 folder1←##.CiderConfig.HOME,'/Tests/Myapp'
 folder2←FilesAndDirs.GetTempSubDir⊃⎕SI
 (folder1,'/*')##.MakeHelpers.CopyTo folder2,'/'
 parms←⎕NS''
 parms.watch←'ns'
 res←parms ⎕SE.Link.Create'#.TEMP'folder2
 Assert∨/'Linked:'⍷res
 Assert~∨/'Error:'⍷res

 public←(⊂'API')~⍨(↓#.TEMP.⎕NL⍳16)
 noOf←##.MakeHelpers.CreateAPI #.TEMP public

 →T.GoToTidyUp'Universe'≢#.TEMP.API.HelloVars
 →T.GoToTidyUp'Galaxy'≢#.TEMP.API.class1.Hello2
 →T.GoToTidyUp'Niladic'≢#.TEMP.API.fn1
 →T.GoToTidyUp'Monadic'≢#.TEMP.API.fn2 ⍬
 →T.GoToTidyUp'Dyadic'≢⍬ #.TEMP.API.fn3 ⍬
 →T.GoToTidyUp'Ambivalent'≢#.TEMP.API.fn4 ⍬
 →T.GoToTidyUp'Ambivalent'≢⍬ #.TEMP.API.fn4 ⍬
 →T.GoToTidyUp 0=#.TEMP.API.⎕NC'interface1'
 →T.GoToTidyUp'World'≢#.TEMP.API.Hello
 →T.GoToTidyUp'Galaxy'≢#.TEMP.API.ns1.Hello
 →T.PassesIf 4∧.=#.TEMP.API.⎕NC'op1'
 →T.PassesIf 0∨.≠#.TEMP.API.⎕NC↑'HelloVars' 'Hello'
 →T.GoToTidyUp 2≠≢list←FilesAndDirs.ListDirs folder2,'/'
 →T.GoToTidyUp'API'≢1 2⊃⎕NPARTS list
 noOfFiles←≢⊃({q←⎕NS'' ⋄ q.recursive←⍵ ⋄ q}1)FilesAndDirs.Dir folder2,'\API\'
 →T.GoToTidyUp noOfFiles≠noOf

 R←T._OK

∆TidyUp:
 {}⎕SE.Link.Break'#.TEMP'
 :Trap 0 ⋄ {}FilesAndDirs.RmDirByForce folder2 ⋄ :EndTrap
⍝Done
